<UserControl x:Class="SofarHVMExe.View.CANConnectPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:local="clr-namespace:SofarHVMExe.View" 
             xmlns:uc="clr-namespace:SofarHVMExe.UserControls"
             xmlns:vm="clr-namespace:SofarHVMExe.ViewModel"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance vm:CANConnectPageVm}"
             d:DesignHeight="450" d:DesignWidth="800">
    
    <Border Background="{DynamicResource sectionBackgroundColor}" >
        <Grid Margin="10 5 10 0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            
            <!-- 参数设置 -->
            <GroupBox Header="CAN参数设置" >
                <StackPanel Orientation="Horizontal" Margin="5">
                    <TextBlock Text="设备类型"  VerticalAlignment="Center"/>
                    <ComboBox Margin="5 0 0 0" Width="80" Height="25" VerticalContentAlignment="Center">
                        <ComboBoxItem Content="ECAN" IsSelected="True"/>
                    </ComboBox>

                    <TextBlock Text="设备索引号"  VerticalAlignment="Center" Margin="20 0 0 0"/>
                    <ComboBox Margin="5 0 0 0" Width="80" Height="25" VerticalContentAlignment="Center" SelectedIndex="{Binding DeviceInx}">
                        <ComboBoxItem Content="0" IsSelected="True"/>
                        <ComboBoxItem Content="1"/>
                        <ComboBoxItem Content="2" />
                        <ComboBoxItem Content="3" />
                        <ComboBoxItem Content="4" />
                    </ComboBox>

                    <TextBlock Text="CAN1波特率"  VerticalAlignment="Center" Margin="20 0 0 0"/>
                    <ComboBox Margin="5 0 0 0" Width="80" Height="25" VerticalContentAlignment="Center"
                                ItemsSource="{Binding BaudrateList}"
                                SelectedIndex="{Binding BaudrateInx1}">
                    </ComboBox>

                    <TextBlock Text="CAN2波特率"  VerticalAlignment="Center" Margin="20 0 0 0"/>
                    <ComboBox Margin="5 0 0 0" Width="80" Height="25" VerticalContentAlignment="Center" 
                                ItemsSource="{Binding BaudrateList}"
                                SelectedIndex="{Binding BaudrateInx2}">
                    </ComboBox>

                    <!--<TextBlock Text="模式"  VerticalAlignment="Center" Margin="20 0 0 0"/>
                    <ComboBox Margin="5 0 0 0" Width="100" Height="25" VerticalContentAlignment="Center" 
                                ItemsSource="{Binding ModeList}"
                                SelectedIndex="{Binding Mode}">
                    </ComboBox>-->
                </StackPanel>
            </GroupBox>

            <!-- 设备操作 -->
            <GroupBox Header="设备操作" Grid.Row="1" Margin="0 10 0 0">
                <StackPanel Orientation="Horizontal" Margin="5">
                    <Button Content="连接设备"  Command="{Binding OpenDeviceCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}" Width="70" Height="30"/>
                    <Button Content="断开设备"  Command="{Binding CloseDeviceCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}" Margin="10 0 0 0" Width="70" Height="30"/>
                    <CheckBox Content="打开通道1" IsChecked="{Binding IsChannel1Opened}" VerticalAlignment="Center" VerticalContentAlignment="Center" Margin="10 0 0 0" />
                    <CheckBox Content="打开通道2" IsChecked="{Binding IsChannel2Opened}" VerticalAlignment="Center" VerticalContentAlignment="Center" Margin="10 0 0 0" />
                </StackPanel>
            </GroupBox>

            <!-- 发送接收操作 -->
            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                    
                <!-- 通道1操作 -->
                <GroupBox Grid.Column="0" Header="通道1" Margin="0 10 0 0" >
                    <Grid >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        
                        <StackPanel Grid.Row="0">
                            <StackPanel Orientation="Horizontal" Margin="5">
                                <TextBox Text="{Binding SendTimeCan1}" VerticalContentAlignment="Center" Width="60" Height="30" 
                                            ToolTip="发送帧数" ToolTipService.InitialShowDelay="0"/>
                                <TextBox Text="{Binding SendIdCan1}" VerticalContentAlignment="Center" Width="280" Height="30" Margin="6 0 0 0"/>
                            </StackPanel>
                            
                            <StackPanel Orientation="Horizontal" Margin="5 5 5 8">
                                <Button Content="发送(hex)"  Command="{Binding SendChannel1Command}" Width="60" Height="30"/>
                                <TextBox Text="{Binding SendDataCan1}" VerticalContentAlignment="Center" Width="280" Height="30" 
                                            Margin="6 0 0 0"/>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="0">
                                <CheckBox Content="接收" VerticalContentAlignment="Center" Margin="8 0 0 0" IsChecked="{Binding RecvDataEnableCan1}"/>
                                <CheckBox Content="心跳" VerticalContentAlignment="Center" Margin="8 0 0 0" IsChecked="{Binding ShowHeartBeatCan1}"/>
                                <Button Content="清除" Width="60" Height="24"  Margin="8 0 0 0" Command="{Binding ClearRecvCan1Command}"/>
                                <Button Content="保存" Width="60" Height="24"  Margin="8 0 0 0" Command="{Binding SaveCan1Command}"/>
                            </StackPanel>
                        </StackPanel>

                        <TextBox Grid.Row="1" Text="{Binding RecvDataCan1}" TextWrapping="Wrap" AcceptsReturn="True" 
                                    VerticalScrollBarVisibility="Auto" VerticalAlignment="Stretch" Margin="5 5 0 0" Padding="3 3 3 0">
                            <b:Interaction.Triggers>
                                <b:EventTrigger EventName="TextChanged">
                                    <b:CallMethodAction MethodName="ScrollToEnd" />
                                </b:EventTrigger>
                            </b:Interaction.Triggers>
                        </TextBox>
                    </Grid>
                </GroupBox>

                <!-- 通道2操作 -->
                <GroupBox Grid.Column="1" Header="通道2" Margin="0 10 0 0">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <StackPanel Grid.Row="0">
                            <StackPanel Orientation="Horizontal" Margin="5">
                                <TextBox Text="{Binding SendTimeCan2}" VerticalContentAlignment="Center" Width="60" Height="30" 
                                         ToolTip="发送帧数" ToolTipService.InitialShowDelay="0"/>
                                <TextBox Text="{Binding SendIdCan2}" VerticalContentAlignment="Center" Width="300" Height="30"
                                         Margin="6 0 0 0"/>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="5 5 5 8">
                                <Button Content="发送(hex)"  Command="{Binding SendChannel2Command}" Width="60" Height="30"/>
                                <TextBox Text="{Binding SendDataCan2}" VerticalContentAlignment="Center" Width="300" Height="30" 
                                            Margin="6 0 0 0"/>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal">
                                <CheckBox Content="接收" VerticalContentAlignment="Center" Margin="8 0 0 0" HorizontalAlignment="Left" IsChecked="{Binding RecvDataEnableCan2}"/>
                                <CheckBox Content="心跳" VerticalContentAlignment="Center" Margin="8 0 0 0" IsChecked="{Binding ShowHeartBeatCan2}"/>
                                <Button Content="清除" Width="60" Height="24" Margin="8 0 0 0" Command="{Binding ClearRecvCan2Command}"/>
                                <Button Content="保存" Width="60" Height="24"  Margin="8 0 0 0" Command="{Binding SaveCan2Command}"/>
                            </StackPanel>
                        </StackPanel>

                        <TextBox Grid.Row="1" Text="{Binding RecvDataCan2}" TextWrapping="Wrap" AcceptsReturn="True" 
                                VerticalScrollBarVisibility="Auto" Margin="5 5 0 0" Padding="3 3 3 0">
                            <b:Interaction.Triggers>
                                <b:EventTrigger EventName="TextChanged">
                                    <b:CallMethodAction MethodName="ScrollToEnd" />
                                </b:EventTrigger>
                            </b:Interaction.Triggers>
                        </TextBox>
                    </Grid>
                </GroupBox>
            </Grid>
            <!-- 连接动画区域 -->
            <uc:ConnectLegend Grid.Row="3" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0 0 0 0"
                              IsConnected="{Binding IsConnected}" 
                              IsChannel1Open="{Binding IsChannel1Opened}" IsChannel2Open="{Binding IsChannel2Opened}"/>
        </Grid>
    </Border>
</UserControl>
